"""Name

Revision ID: 7c5292c1c458
Revises: 
Create Date: 2024-04-10 22:53:56.040660

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '7c5292c1c458'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('name',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('seed', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_name'))
    )
    op.create_index(op.f('ix_name_id'), 'name', ['id'], unique=False)
    op.create_table('sessiontoken',
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('session_id', name=op.f('pk_sessiontoken'))
    )
    op.create_index(op.f('ix_sessiontoken_session_id'), 'sessiontoken', ['session_id'], unique=False)
    op.create_table('user',
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('login_ct', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('pw_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('parentbracket',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('parent_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['user.id'], name=op.f('fk_parentbracket_parent_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_parentbracket'))
    )
    op.create_index(op.f('ix_parentbracket_id'), 'parentbracket', ['id'], unique=False)
    op.create_table('bracket',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('parent_bracket_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['parent_bracket_id'], ['parentbracket.id'], name=op.f('fk_bracket_parent_bracket_id_parentbracket')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_bracket_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bracket'))
    )
    op.create_index(op.f('ix_bracket_id'), 'bracket', ['id'], unique=False)
    op.create_table('matchup',
    sa.Column('bracket_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('parent_bracket_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('parent_matchup_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('region', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('rnd', sa.Integer(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['bracket_id'], ['bracket.id'], name=op.f('fk_matchup_bracket_id_bracket')),
    sa.ForeignKeyConstraint(['parent_bracket_id'], ['parentbracket.id'], name=op.f('fk_matchup_parent_bracket_id_parentbracket')),
    sa.ForeignKeyConstraint(['parent_matchup_id'], ['matchup.id'], name=op.f('fk_matchup_parent_matchup_id_matchup')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_matchup'))
    )
    op.create_index(op.f('ix_matchup_id'), 'matchup', ['id'], unique=False)
    op.create_table('namematchuplink',
    sa.Column('name_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('match_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('is_winner', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['matchup.id'], name=op.f('fk_namematchuplink_match_id_matchup')),
    sa.ForeignKeyConstraint(['name_id'], ['name.id'], name=op.f('fk_namematchuplink_name_id_name')),
    sa.PrimaryKeyConstraint('name_id', 'match_id', name=op.f('pk_namematchuplink'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('namematchuplink')
    op.drop_index(op.f('ix_matchup_id'), table_name='matchup')
    op.drop_table('matchup')
    op.drop_index(op.f('ix_bracket_id'), table_name='bracket')
    op.drop_table('bracket')
    op.drop_index(op.f('ix_parentbracket_id'), table_name='parentbracket')
    op.drop_table('parentbracket')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_sessiontoken_session_id'), table_name='sessiontoken')
    op.drop_table('sessiontoken')
    op.drop_index(op.f('ix_name_id'), table_name='name')
    op.drop_table('name')
    # ### end Alembic commands ###
